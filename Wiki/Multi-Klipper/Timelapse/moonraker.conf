[server]
host: 0.0.0.0
port: 7125
enable_debug_logging: False
klippy_uds_address: /tmp/klippy_uds-1

[database]
database_path: /home/pi/.moonraker_database_1

[authorization]
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:
    *.lan
    *.local
    *://my.mainsail.xyz
    *://app.fluidd.xyz

[file_manager]
config_path: /home/pi/klipper_config/printer_1
log_path: /home/pi/klipper_logs

[octoprint_compat]

[history]

[update_manager]
channel: dev

[update_manager mainsail]
type: web_beta
repo: mainsail-crew/mainsail
path: ~/mainsail
refresh_interval: 24


#[update_manager KlipperScreen]
#type: git_repo
#path: /home/pi/KlipperScreen
#origin: https://github.com/jordanruthe/KlipperScreen.git
#env: /home/pi/.KlipperScreen-env/bin/python
#requirements: scripts/KlipperScreen-requirements.txt
#install_script: scripts/KlipperScreen-install.sh

#[update_manager timelapse]
#type: git_repo
#primary_branch: main
#path: ~/moonraker-timelapse
#origin: https://github.com/mainsail-crew/moonraker-timelapse.git

[timelapse]
enabled: True
##   If this set to False the Gcode macros are ignored and
##   the autorender is disabled at the end of the print.
##   The idea is to disable the plugin by default and only activate 
##   it during runtime via the http endpoint if a timelapse is desired.
autorender: True
##   If this is set to False, the autorender is disabled at the end of the print.
constant_rate_factor: 20
##   The range of the CRF scale is 0–51, where 0 is lossless,
##   23 is the default, and 51 is worst quality possible. 
##   A lower value generally leads to higher quality, and a 
##   subjectively sane range is 17–28.
##   more info: https://trac.ffmpeg.org/wiki/Encode/H.264
output_framerate: 30
##   Output framerate of the generated video
output_path: /home/pi/gcode_files/Timelapse/
##   Path where the generated video will be saved
frame_path: /tmp/timelapse2/
##   Path where the temporary frames are saved
time_format_code: %Y%m%d_%H%M
##   Manipulates datetime format of the output filename
##   see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes
snapshoturl: http://192.168.1.65/webcam2/?action=snapshot
##   url to your webcamstream
pixelformat: yuv420p
##   set pixelformat for output video
##   default to yuv420p because eg. yuvj422p will not play on 
##   on most smartphones or older media players
#extraoutputparams: -filter_complex "[0]trim=0:5[hold]" 
##   here you can extra output parameters to FFMPEG 
##   further info: https://ffmpeg.org/ffmpeg.html 
##   eg rotate video by 180° "-vf transpose=2,transpose=2"
##   or repeat last frame for 5 seconds:
##   -filter_complex "[0]trim=0:5[hold];[0][hold]concat[extended];[extended][0]overlay"